
docker run "container_name"             creates and runs a container,
                                        shows the logs of the container

docker ps                               shows all running docker containers
docker ps -all                          show all docker containers you ever ran

docker create "container_name"          creates the container
docker start -a "id"                    starts the container, runs what it contains

docker system prune                     deletes all containers and build cache
docker logs "id"                        shows the logs for the container

docker stop "id"                        gives the container time to shut down
docker kill "id"                        stops the container with no cleanup

docker exec -it "id" "command"          insert a new command into the container
                                        example: docker exec -it d07b45287854 redis-cli
                                        -it = -i an -t , -i = direct message to stdin channel
                                        -t = prettifies the output

docker exec -it "id" sh                 opens the docker container with shell
                                        sh = another command shell / terminal

docker run -it busybox sh               start a new container out of the busybox image
                                        run the sh program (shell), attach to the stdin channel

    Creating docker files:

docker build .                          take a docker file and generate a image out of it
                                        the . build context current dir

docker build -t samiperalahti/redis:latest .
                                        tag an image with your docker id / name

docker run samiperalahti/redis          run your tagged docker image

docker run -p 5000:8080 samiperalahti/simpleweb
                                        setup portmapping for docker

    Docker compose:

docker-compose up                       start up containers
docker-compose up --build               start up containers, rebuild them
docker-compose up -d                    start containers run in background
docker-compose down                     close all containers that are running
docker-compose ps                       prints status for you composed containers


docker build -f Dockerfile.dev .        specify the dockerfile that should be used
    Setting up volumes, automatic builds to the container
docker run -p 3000:3000 -v /app/node_modules  -v $(pwd):/app 89eb8d913d90

                                        -v =
                                        if there is no :, use this as a placeholder that is
                                        already inside the container (or will be generated)
                                        if there is a :
                                        you map those files to the path after the :
